name: CI

on:
  push:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    strategy:
      matrix:
        configuration: [Release]
        # Uncomment below to add Debug builds if needed
        # configuration: [Release, Debug]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Cache Projucer build
      uses: actions/cache@v4
      id: cache-projucer
      with:
        path: lib/juce/extras/Projucer/Builds/MacOSX/build/Release
        key: ${{ runner.os }}-projucer-${{ hashFiles('lib/juce/extras/Projucer/**/*.cpp', 'lib/juce/extras/Projucer/**/*.h', 'lib/juce/extras/Projucer/**/*.mm') }}
        restore-keys: |
          ${{ runner.os }}-projucer-

    - name: Build Projucer
      if: steps.cache-projucer.outputs.cache-hit != 'true'
      run: |
        cd lib/juce/extras/Projucer/Builds/MacOSX
        xcodebuild -project Projucer.xcodeproj -configuration Release -quiet

    - name: Generate Xcode projects
      run: |
        ./lib/juce/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer --resave "LightHost.jucer"
        ./lib/juce/extras/Projucer/Builds/MacOSX/build/Release/Projucer.app/Contents/MacOS/Projucer --resave "NovaHost.jucer"

    - name: Build LightHost
      run: |
        cd Builds/MacOSX
        xcodebuild -project LightHost.xcodeproj -configuration ${{ matrix.configuration }} CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

    - name: Build NovaHost
      run: |
        cd Builds/MacOSX
        xcodebuild -project NovaHost.xcodeproj -configuration ${{ matrix.configuration }} CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Host-macOS-${{ matrix.configuration }}
        path: |
          Builds/MacOSX/build/${{ matrix.configuration }}/*.app/
        retention-days: 7

  build-status:
    name: Build Status
    if: always()
    needs: [build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Check build matrix status
        if: needs.build-macos.result != 'success'
        run: exit 1
        
      - name: Summarize builds
        run: |
          echo "### Build Status Summary" >> $GITHUB_STEP_SUMMARY
          echo "âœ… macOS build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "See the Windows and Linux workflows for their respective build statuses" >> $GITHUB_STEP_SUMMARY
          
      - name: Slack Notification
        if: always() && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-builds
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Build Status: ${{ job.status }}'
          SLACK_TITLE: 'LightHostFork CI'
          SLACK_USERNAME: github-actions